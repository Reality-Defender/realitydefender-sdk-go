name: Test Go SDK

on:
  push:
    branches: [ main ]
    paths:
      - 'go/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'go/**'

jobs:
  test-go-sdk:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Install dependencies
      working-directory: ./go
      run: |
        go mod download
        go install github.com/onsi/ginkgo/v2/ginkgo@latest
        go install golang.org/x/lint/golint@latest
        ginkgo version
        
    - name: Lint with golint
      working-directory: ./go
      run: |
        golint -set_exit_status ./src/...
        
    - name: Check formatting with gofmt
      working-directory: ./go
      run: |
        gofmt -l -d $(find ./src -type f -name '*.go') 
        test -z "$(gofmt -l $(find ./src -type f -name '*.go'))"
        
    - name: Run tests with ginkgo
      working-directory: ./go
      run: |
        mkdir -p coverage        
        ginkgo -r -v --randomize-all --randomize-suites --fail-on-pending --cover --trace --timeout=30s --output-dir=coverage --coverprofile=coverprofile.out --no-color --keep-going --keep-separate-coverprofiles src/        

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./go/coverage/src_realitydefender_coverprofile.out
        flags: go
        name: go-sdk-codecov
        fail_ci_if_error: true 
